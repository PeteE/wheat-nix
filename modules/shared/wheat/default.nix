# vim: ts=2:sw=2:et
{
  config,
  pkgs,
  lib,
  system,
  ...
}:
with lib; let
  cfg = config.wheat;
  isDarwin = if lib.hasSuffix "darwin" system then true else false;

in {
  imports =
    [
      (./remote-builder.nix)
      (./remote-builder-client.nix)
    ];

  options = {
    wheat = with types; {
      enable = mkEnableOption "Enable";
      secrets.enable = mkEnableOption "Enable SOPS secrets";
      nameservers = mkOption {
        description = "DNS Servers";
        type = listOf str;
        default = [
          "1.1.1.1"
          "1.0.0.1"
        ];
      };
      extraHosts = mkOption {
        type = lines;
        default = ''
          # infra
          192.168.1.33    gw         # router
          192.168.1.3     switch0    # hp switch
          192.168.1.4     ap0        # netgear AP
          192.168.1.159   usw-petee  # switch
          192.168.1.196   usw-sam    # switch

          # computers
          192.168.1.7     x1
          192.168.1.143   ripnix
          192.168.1.115   m4
          192.168.1.50    hv
          192.168.1.51    ripper
          192.168.1.120   trunas

          # devices
          192.168.1.116   pixel-7a
          192.168.1.186   joannas-ipad
          192.168.1.185   petee-ipad
          192.168.1.195   mariannes-air
          192.168.1.209   m3p-wifi
          192.168.1.210   m3p

          # k8s nodes
          192.168.1.202   k8s-master0
          192.168.1.162   k8s-worker-100
          192.168.1.133   k8s-worker-200

          # misc / iot
          192.168.1.32    printer
          192.168.1.168   appletv
          192.168.1.132   rachio
          192.168.1.139   myq
          192.168.1.125   nest-door
          192.168.1.160   nest-driveway
          192.168.1.150   nest-backyard
          192.168.1.171   home-mini-bedroom
          192.168.1.226   xboxone-fam
          192.168.1.220   xboxone-sam
          192.168.1.182   chromecast
        '';
      };
      user = with types; {
        name = mkOption {
          description = "Username to create";
          type = str;
        };
        hashedPassword = mkOption {
          description = "hashed password generated by mkpasswd";
          type = str;
        };
        extraGroups = mkOption {
          default = [
            "podman"
          ];
          description = "Additional groups to add the user to.";
          type = listOf str;
        };
        authorizedKeys = mkOption {
          type = listOf str;
          default = [
            "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJ3x/dtivaU+bPMRYzY1O+XQPEGnBahNnh9sBZMrJrIX petee"  # x1
            "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBaGYqqLKVikzCKsRJqfPu4zsTCKCfCz9xnWYQJNep+v petee@x1"  # prob dead
            "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAMShYQQ6RsCgYUXKxaVYjjGcjvdB533v/wsdrYq7G/7 JuiceSSH"  # phone
            "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMjd2zJEmRiuqMJz2kC4ABIiSVE2HWdRPkZTmcAxp6GS petee@nixos" # nixos vm (ripper)
            "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL1SMCMFF12YYwlYGIi/UATCPTQ+PEdYOygGFouYrd5N petee@m3p" # lappy
            "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC1Xr2ircu0B1j+fmj8r1P5xtRi+LstqeXCJ7XIdhpyI nixos@nixos" # rpi?
            "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEMv8uBStPXcU4V5+7L6TpP08HhpG5vumutAFogVd0ca pete@m4" # litle mac
          ];
        };
      };
    };
  };

  config = mkIf cfg.enable {
    programs.zsh.enable = true;
    users.groups.${cfg.user.name} = {};
    users.users.${cfg.user.name} = {
      inherit (cfg.user) name extraGroups;
      home = if isDarwin then "/Users/${cfg.user.name}" else "/home/${cfg.user.name}";
      createHome = true;
      shell = "${pkgs.zsh}/bin/zsh";
      openssh.authorizedKeys.keys = cfg.user.authorizedKeys;
    } // lib.optionalAttrs isDarwin {
      isHidden = false;
    };
    networking.extraHosts = cfg.extraHosts;
    services.openssh = {
      enable = true;
      ports = [ 22 ];
      settings = {
        PasswordAuthentication = false;
        AllowUsers = null;
        UseDns = true;
        X11Forwarding = false;
        PermitRootLogin = "no";
      };
    };

    console.useXkbConfig = true;
    services.xserver = {
      enable = true;
      xkb = {
        options = "caps:escape";
      };
    };

    fonts.packages = with pkgs.nerd-fonts; [
      fira-code
      droid-sans-mono
      symbols-only
      jetbrains-mono
    ];
    services.tailscale.enable = true;
    networking.nameservers = cfg.nameservers;
    nix.settings.trusted-users = [
      "root"
      "petee"
    ];
    programs.firefox.enable = true;

    # environment.sessionVariables = {
    #   TERM = "screen-256color";
    # };

    system.stateVersion = "25.11";
  };
}
